---
# tasks file for f5_do_install
- name: Check BIG IP tmos version >= 13.1
  tags:
    - tmos
  uri:
    url: "https://{{ hostvars[groups['adc'][0]]['ansible_host'] }}/mgmt/tm/sys/software/volume"
    method: GET
    force_basic_auth: yes
    user: "{{ e_user}}"
    password: "{{ e_pass }}"
    validate_certs: no
  register: tmos_ver
  delegate_to: localhost

- name: Set fact t_ver (tmos version)
  set_fact:
    t_ver: "{{ item }}"
  loop: "{{ tmos_ver.json | json_query('items[*].version') }}"

- name: Version is not supported
  fail:
    msg: "This version is not supported, only tmos versions >=12.1"
  when: t_ver is version('13.1', '<')

- name: Check if DO rpm exist
  stat:
    path: "{{ roles_d }}/f5_do_install/files/{{ doRPM }}"
  register: do_stat

- name: Download DO RPM sha256 checksum
  get_url:
    url: https://github.com/F5Networks/f5-declarative-onboarding/releases/download/{{ doTag }}/{{ doSha }}
    dest: "{{ roles_d }}/f5_do_install/files/{{ doSha }}"
  when: do_stat.stat.exists == False

- name: Register sha256 output for verification
  shell: cat "{{ roles_d }}/f5_do_install/files/{{ doSha }}" |  awk -F " " '{print $1}'
  register: shaSum
  when: do_stat.stat.exists == False

- name: Download DO RPM from F5 Networks
  get_url:
    url: https://github.com/F5Networks/f5-declarative-onboarding/releases/download/{{ doTag }}/{{ doRPM }}
    dest: "{{ roles_d }}/f5_do_install/files/{{ doRPM }}"
    checksum: sha256:"{{ shaSum.stdout }}"
  register: dl_stat
  until: dl_stat.msg.find("OK")  != 1
  retries: 3
  delay: 10
  when: do_stat.stat.exists == False

- name: Check for 443 open
  wait_for:
    host: "{{ hostvars[groups['adc'][0]]['ansible_host'] }}"
    port: 443
    state: started
    delay: 0
    timeout: 15
  ignore_errors: yes

- name: Generate login token
  uri:
    url: "https://{{ hostvars[groups['adc'][0]]['ansible_host'] }}/mgmt/shared/authn/login"
    method: POST
    body_format: json
    body:
      {
        "username": "{{ e_user }}",
        "password": "{{ e_pass }}",
        "loginProviderName": "tmos",
      }
    validate_certs: no
  tags: docheck
  register: Auth_tok
  retries: 4
  delay: 15
  until: Auth_tok.status == 200
  delegate_to: localhost

- name: Check for DO
  uri:
    url: "https://{{ hostvars[groups['adc'][0]]['ansible_host'] }}/mgmt/shared/declarative-onboarding"
    method: GET
    body_format: json
    headers:
      Content-Type: application/json
      X-F5-Auth-Token: "{{ Auth_tok.json.token.token }}"
    validate_certs: no
    status_code: 200,202,404
  tags: docheck
  register: returnd
  delegate_to: localhost
  ignore_errors: yes

- name: Install F5 Declarative Onboarding
  bigip_iapplx_package:
    package: "{{ roles_d }}/f5_do_install/files/{{ doRPM }}"
    provider: "{{ provider }}"
  delegate_to: localhost
  when: returnd.status == 404

- name: Check for 443 open
  wait_for:
    host: "{{ hostvars[groups['adc'][0]]['ansible_host'] }}"
    port: 443
    state: started
    delay: 0
    timeout: 10
  ignore_errors: yes

- name: Check for DO after install
  uri:
    url: "https://{{ hostvars[groups['adc'][0]]['ansible_host'] }}/mgmt/shared/declarative-onboarding"
    method: GET
    body_format: json
    headers:
      Content-Type: application/json
      X-F5-Auth-Token: "{{ Auth_tok.json.token.token }}"
    validate_certs: no
  tags: d0valid
  register: do_installd
  delegate_to: localhost
  until: do_installd.status == 200
  retries: 4
  delay: 15
  when: returnd.status == 404

- name: show status
  debug:
    var: do_installd.status

- file:
    path: "{{ roles_d }}/f5_do_install/files/{{ item }}"
    state: absent
  with_items:
    - "{{ doSha }}"
    - "{{ doRPM }}"
  when: do_installd.status == 200
